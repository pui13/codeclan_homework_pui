library(tidyverse)
library(janitor)
avocado <- read_csv("data/avocado.csv")
View(avocado)
View(avocado)
avocado <- read_csv("data/avocado.csv") %>%
clean_names()
glimpse()
glimpse(avocado)
avocado %>%
min(date) + max(date)
avocado %>%
min(date)
min(avocado$date)
min(avocado$date)
max(avocado$date)
distinct(avocado$region)
distinct(avocado$type)
library(tidyverse)
library(janitor)
distinct(avocado$type)
unique(avocado$type)
unique(avocado$region)
library(tidyverse)
library(janitor)
library(lubridate)
avocado %>%
mutate(quarter = as.factor(quarter(date)))
avocado %>%
mutate(quarter = as.factor(quarter(date))) %>%
arrange(date)
avocado %>%
mutate(quarter = as.factor(quarter(date)),
year = as.factor(year))
aavo_clean <- avocado %>%
mutate(quarter = as.factor(quarter(date)),
year = as.factor(year)) %>%
select(-(x1, ate, region ))
aavo_clean <- avocado %>%
mutate(quarter = as.factor(quarter(date)),
year = as.factor(year)) %>%
select(-(x1, date, region))
aavo_clean <- avocado %>%
mutate(quarter = as.factor(quarter(date)),
year = as.factor(year)) %>%
select(-c(x1, date, region))
avo_clean <- avocado %>%
mutate(quarter = as.factor(quarter(date)),
year = as.factor(year)) %>%
select(-c(x1, date, region))
rm(aavo_clean)
library(tidyverse)
library(janitor)
library(lubridate)
library(ggfortify)
autoplot(avo_clean)
library(tidyverse)
library(janitor)
library(lubridate)
library(ggfortify)
autoplot(avo_clean)
autoplot(avocado)
View(avo_clean)
glimpse(avo_clean)
ggfortify::autoplot(avocado)
autoplot(avocado)
glimpse(avo_clean)
summary(avo_clean)
avocado <- read_csv("data/avocado.csv") %>%
clean_names()
avocado <- read_csv("data/avocado.csv") %>%
clean_names()
library(tidyverse)
library(janitor)
library(ggfortify)
library(lubridate)
avocado <- read_csv("data/avocado.csv") %>%
clean_names()
glimpse(avocado)
avo_clean <- avocado %>%
mutate(quarter = as.factor(quarter(date)),
year = as.factor(year)) %>%
select(-c(x1, date, region))
glimpse(avo_clean)
summary(avo_clean)
autoplot(avocado)
library(tidyverse)
library(janitor)
library(lubridate)
library(leaps)
avo_clean %>%
ggplot(aes(x = average_price)) +
geom_histogram()
avo_clean %>%
ggplot(aes(x = log10(average_price)) +
geom_histogram()
avo_clean %>%
ggplot(aes(x = log10(average_price))) +
geom_histogram()
regsubsets_forward <- regsubsets(average_price ~ ., data = avo_clean, method = "forward")
summary(regsubsets_forward)
regsubsets_forward <- regsubsets(average_price ~ ., data = avo_clean, nvmax = -1, method = "forward")
regsubsets_forward <- regsubsets(average_price ~ ., data = avo_clean, nvmax = 15, method = "forward")
summary(regsubsets_forward)
regsubsets_forward <- regsubsets(average_price ~ ., data = avo_clean, nvmax = 20, method = "forward")
summary(regsubsets_forward)
regsubsets_forward <- regsubsets(average_price ~ ., data = avo_clean, nvmax = 15, method = "forward")
summary(regsubsets_forward)
sum_regsubsets_forward <- summary(regsubsets_forward)
sum_regsubsets_forward <- summary(regsubsets_forward)
sum_regsubsets_forward
regsubsets_exhaustive <- regsubsets(average_price ~ ., data = avo_clean, method = "exhaustive")
sum_regsubsets_exhaustive <- summary(sum_regsubsets_exhaustive)
regsubsets_exhaustive <- regsubsets(average_price ~ ., data = avo_clean, method = "exhaustive")
sum_regsubsets_exhaustive <- summary(regsubsets_exhaustive)
sum_regsubsets_exhaustive
regsubsets_exhaustive <- regsubsets(average_price ~ ., data = avo_clean, nvmax = 15, method = "exhaustive")
sum_regsubsets_exhaustive <- summary(regsubsets_exhaustive)
sum_regsubsets_exhaustive
plot(sum_regsubsets_exhaustive$bic, type = "b")
plot(sum_regsubsets_exhaustive$bic, type = "b")
plot(sum_regsubsets_exhaustive$rsq, type = "b")
summary(regsubsets_exhaustive)$which[6,]
mod1 <- lm(average_price ~ x4046 + x4225 + typeorganic + year + quarter, data = avo_clean)
mod1 <- lm(average_price ~ x4046 + x4225 + type + year + quarter, data = avo_clean)
mod1 <- lm(average_price ~ x4046 + x4225 + type + year + quarter, data = avo_clean)
summary(mod1)
mod1 <- lm(average_price ~ x4046 + x4225 + type + year + quarter + total_volume, data = avo_clean)
summary(mod1)
mod1 <- lm(average_price ~ x4046 + x4225 + type + year + quarter, data = avo_clean)
summary(mod1)
library(tidyverse)
library(janitor)
library(lubridate)
library(leaps)
library(glmulti)
install.packages("glmulti")
library(tidyverse)
library(janitor)
library(lubridate)
library(leaps)
library(glmulti)
library(tidyverse)
library(janitor)
library(lubridate)
library(leaps)
library(glmulti)
library(tidyverse)
library(janitor)
library(lubridate)
library(leaps)
library(glmulti)
install.packages("rJava")
install.packages("rJava")
library(tidyverse)
library(janitor)
library(lubridate)
library(leaps)
library(glmulti)
glmulti_fit <- glmulti(
average_price ~ .,
data = avo_clean,
level = 2, # 2 = include pairwise interactions, 1 = main effects only (main effect = no pairwise interactions)
minsize = 0, # no min size of model
maxsize = -1, # -1 = no max size of model
marginality = TRUE, # marginality here means the same as 'strongly hierarchical' interactions, i.e. include pairwise interactions only if both predictors present in the model as main effects.
method = "g", # the problem is too large for exhaustive search, so search using a genetic algorithm
crit = bic, # criteria for model selection is BIC value (lower is better)
plotty = FALSE, # don't plot models as function runs
report = TRUE, # do produce reports as function runs
confsetsize = 100, # return best 100 solutions
fitfunction = lm # fit using the `lm` function
)
mod2 <- lm(average_price~1+year+quarter+total_volume+x4046+x4225+x4770+total_bags+small_bags+large_bags+x_large_bags+type+quarter:year+x4225:x4046+total_bags:total_volume+small_bag)
mod2 <- lm(average_price~1+year+quarter+total_volume+x4046+x4225+x4770+total_bags+small_bags+large_bags+x_large_bags+type+quarter:year+x4225:x4046+total_bags:total_volume+small_bag, data = avo_clean)
mod2 <- lm(average_price~1+year+quarter+total_volume+x4046+x4225+x4770+total_bags+small_bags+large_bags+x_large_bags+type+quarter:year+x4225:x4046+total_bags:total_volume+small_bag, data = avo_clean)
mod2 <- lm(average_price~1+year+quarter+total_volume+x4046+x4225+x4770+total_bags+small_bags+large_bags+x_large_bags+type+quarter:year+x4225:x4046+total_bags:total_volume+small_bags:total_volume+small_bags:x4225+large_bags:total_volume+large_bags:small_bags+x_large_bags:total_bags+x_large_bags:small_bags+type:x4046+type:x4225+type:x4770+type:large_bags+type:x_large_bags+year:x4225+year:total_bags+year:small_bags+year:large_bags+year:x_large_bags+year:type, data = avo_clean)
summary(mod2)
par(mfrow = c(2, 2))
plot(mod2)
library(tidyverse)
library(janitor)
library(lubridate)
library(leaps)
library(glmulti)
library(relaimpo)
calc.relimp(mod2, type = "lmg", rela = T)
calc.relimp(mod2, type = "lmg", rela = T)
library(GGally)
avo_clean %>%
ggpairs(aes())
mod1a <- lm(average_price ~ total_volume, data = avo_clean)
mod1a <- lm(average_price ~ total_volume, data = avo_clean)
autoplot(mod1a)
library(GGally)
library(ggfortify)
mod1a <- lm(average_price ~ total_volume, data = avo_clean)
autoplot(mod1a)
mod1a <- lm(average_price ~ log(total_volume), data = avo_clean)
autoplot(mod1a)
mod1a <- lm(average_price ~ x4060, data = avo_clean)
mod1a <- lm(average_price ~ x4046, data = avo_clean)
autoplot(mod1a)
mod1a <- lm(average_price ~ log(x4046), data = avo_clean)
mod1a <- lm(average_price ~ x4046, data = avo_clean)
autoplot(mod1a)
mod1a <- lm(average_price ~ x4046, data = avo_clean)
autoplot(mod1a)
summary(mod1a)
mod1b <- lm(average_price ~ total_volume, data = avo_clean)
autoplot(mod1b)
summary(mod1b)
mod1b <- lm(average_price ~ log(total_volume), data = avo_clean)
autoplot(mod1b)
summary(mod1b)
mod1c <- lm(average_price ~ type, data = avo_clean)
autoplot(mod1c)
summary(mod1c)
library(GGally)
library(ggfortify)
library(modelr)
avo_resid <- avo_clean %>%
add_residuals(mod1c) %>%
select(-c("average_price", "type"))
avo_resid <- avo_clean %>%
add_residuals(mod1c) %>%
select(-c("average_price", "type"))
avo_resid <- avo_clean %>%
add_residuals(mod1c) %>%
select(-c("average_price", "type"))
avo_resid <- avo_clean %>%
add_residuals(mod1c) %>%
dplyr::select(-c("average_price", "type"))
avo_resid <- avo_clean %>%
add_residuals(mod1c) %>%
dplyr::select(-c("average_price", "type"))
autoplot(avo_resid)
avo_resid <- avo_clean %>%
add_residuals(mod1c) %>%
dplyr::select(-c("average_price", "type"))
avo_resid %>%
ggpairs()
mod2a <- lm(average_price ~ type + x4046, data = avo_clean)
summary(mod2a)
autoplot(mod2a)
mod2b <- lm(average_price ~ type + large_bags, data = avo_clean)
summary(mod2b)
autoplot(mod2b)
mod2b <- lm(average_price ~ type + total_volume, data = avo_clean)
summary(mod2b)
autoplot(mod2b)
mod2b <- lm(average_price ~ type + large_bags, data = avo_clean)
summary(mod2b)
autoplot(mod2b)
View(avocado)
summary(glmulti_fit)
glmulti_fit <- glmulti(
average_price ~ .,
data = avo_clean,
level = 1, # 2 = include pairwise interactions, 1 = main effects only (main effect = no pairwise interactions)
minsize = 1, # no min size of model
maxsize = -1, # -1 = no max size of model
marginality = TRUE, # marginality here means the same as 'strongly hierarchical' interactions, i.e. include pairwise interactions only if both predictors present in the model as main effects.
method = "h", # try exhaustive search, or could use "g" for genetic algorithm instead
crit = bic, # criteria for model selection is BIC value (lower is better)
plotty = FALSE, # don't plot models as function runs
report = TRUE, # do produce reports as function runs
confsetsize = 10, # return best 10 solutions
fitfunction = lm # fit using the `lm` function
)
summary(glmulti_fit)
