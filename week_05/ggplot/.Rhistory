#`hrs:mins` = strptime(`hrs:mins`, format = "%H:%M"))
ggplot(aes(x = hours_total, y = counts, colour = device)) +
geom_line(show.legend = F) +
facet_grid(id ~ device) +
xlab(hour) +
ylab(step count)
qb_device_data %>%
mutate(hours_total = mins / 60 + hours) %>%
#mutate(`hrs:mins` = paste0(hours, ":", mins)) %>%#,
#`hrs:mins` = strptime(`hrs:mins`, format = "%H:%M"))
ggplot(aes(x = hours_total, y = counts, colour = device)) +
geom_line(show.legend = F) +
facet_grid(id ~ device) +
xlab(hour) +
ylab("step count")
qb_device_data %>%
mutate(hours_total = mins / 60 + hours) %>%
#mutate(`hrs:mins` = paste0(hours, ":", mins)) %>%#,
#`hrs:mins` = strptime(`hrs:mins`, format = "%H:%M"))
ggplot(aes(x = hours_total, y = counts, colour = device)) +
geom_line(show.legend = F) +
facet_grid(id ~ device) +
xlab("hour") +
ylab("step count")
qb_device_data %>%
mutate(hours_total = mins / 60 + hours) %>%
#mutate(`hrs:mins` = paste0(hours, ":", mins)) %>%#,
#`hrs:mins` = strptime(`hrs:mins`, format = "%H:%M"))
ggplot(aes(x = hours_total, y = counts, colour = device)) +
geom_line(show.legend = F) +
facet_grid(id ~ device) +
xlab("hour") +
ylab("time(hours)") +
ggtitle("Step Count vs Competitor's Device")
qb_device_data %>%
mutate(hours_total = mins / 60 + hours) %>%
#mutate(`hrs:mins` = paste0(hours, ":", mins)) %>%#,
#`hrs:mins` = strptime(`hrs:mins`, format = "%H:%M"))
ggplot(aes(x = hours_total, y = counts, colour = device)) +
geom_line(show.legend = F) +
facet_grid(id ~ device, scales = "free_y") +
xlab("hour") +
ylab("time(hours)") +
ggtitle("Step Count vs Competitor's Device")
qb_device_data %>%
mutate(hours_total = mins / 60 + hours) %>%
#mutate(`hrs:mins` = paste0(hours, ":", mins)) %>%#,
#`hrs:mins` = strptime(`hrs:mins`, format = "%H:%M"))
ggplot(aes(x = hours_total, y = counts, colour = device)) +
geom_line(show.legend = F) +
facet_grid(id ~ device, scales = "free_y") +
xlab("time(hours)") +
ylab("step count") +
ggtitle("Step Count vs Competitor's Device")
qb_device_data %>%
filter(device == "competitor3", id =="person1")
qb_device_data
qb_device_data %>%
filter(device == "competitor3", id =="person5")
qb_device_data %>%
filter(device == "competitor3", id =="person1")
qb_device_data %>%
filter(device == "competitor3", id =="person1", hours >22)
qb_device_data %>%
mutate(time = hours * 60 + mins) %>%
ggplot() +
aes(x = time, y = counts, colour = device) +
geom_line(show.legend = FALSE) +
facet_grid(id ~ device, scales = "free_y") +
scale_x_continuous(breaks = 5:23.1)
qb_device_data %>%
mutate(time = hours * 60 + mins) %>%
ggplot() +
aes(x = time, y = counts, colour = device) +
geom_line(show.legend = FALSE) +
facet_grid(id ~ device, scales = "free_y") +
scale_x_continuous(breaks = 5:24)
qb_device_data %>%
mutate(time = hours * 60 + mins) %>%
ggplot() +
aes(x = time, y = counts, colour = device) +
geom_line(show.legend = FALSE) +
facet_grid(id ~ device, scales = "free_y")
qb_device_data %>%
mutate(hours_total = mins / 60 + hours) %>%
#mutate(`hrs:mins` = paste0(hours, ":", mins)) %>%#,
#`hrs:mins` = strptime(`hrs:mins`, format = "%H:%M"))
ggplot(aes(x = hours_total, y = counts, colour = device)) +
geom_line(show.legend = F) +
facet_grid(id ~ device, scales = "free_y") +
xlab("time(hours)") +
ylab("step count") +
ggtitle("Step Count vs Competitor's Device") +
+
scale_x_continuous(breaks = 5:24)
qb_device_data %>%
mutate(hours_total = mins / 60 + hours) %>%
#mutate(`hrs:mins` = paste0(hours, ":", mins)) %>%#,
#`hrs:mins` = strptime(`hrs:mins`, format = "%H:%M"))
ggplot(aes(x = hours_total, y = counts, colour = device)) +
geom_line(show.legend = F) +
facet_grid(id ~ device, scales = "free_y") +
xlab("time(hours)") +
ylab("step count") +
ggtitle("Step Count vs Competitor's Device") +
scale_x_continuous(breaks = 5:24)
qb_device_data %>%
mutate(hours_total = mins / 60 + hours) %>%
#mutate(`hrs:mins` = paste0(hours, ":", mins)) %>%#,
#`hrs:mins` = strptime(`hrs:mins`, format = "%H:%M"))
ggplot(aes(x = hours_total, y = counts, colour = device)) +
geom_line(show.legend = F) +
facet_grid(id ~ device, scales = "free_y") +
xlab("time(hours)") +
ylab("step count") +
ggtitle("Step Count vs Competitor's Device") +
scale_x_continuous(breaks = 5:24, n.breaks = 10)
qb_device_data %>%
mutate(hours_total = mins / 60 + hours) %>%
#mutate(`hrs:mins` = paste0(hours, ":", mins)) %>%#,
#`hrs:mins` = strptime(`hrs:mins`, format = "%H:%M"))
ggplot(aes(x = hours_total, y = counts, colour = device)) +
geom_line(show.legend = F) +
facet_grid(id ~ device, scales = "free_y") +
xlab("time(hours)") +
ylab("step count") +
ggtitle("Step Count vs Competitor's Device") +
scale_x_continuous(n.breaks = 10)
qb_device_data %>%
mutate(hours_total = mins / 60 + hours) %>%
#mutate(`hrs:mins` = paste0(hours, ":", mins)) %>%#,
#`hrs:mins` = strptime(`hrs:mins`, format = "%H:%M"))
ggplot(aes(x = hours_total, y = counts, colour = device)) +
geom_line(show.legend = F) +
facet_grid(id ~ device, scales = "free_y") +
xlab("time(hours)") +
ylab("step count") +
ggtitle("Step Count vs Competitor's Device") +
scale_x_continuous(n.breaks = 11)
qb_device_data %>%
mutate(hours_total = mins / 60 + hours) %>%
#mutate(`hrs:mins` = paste0(hours, ":", mins)) %>%#,
#`hrs:mins` = strptime(`hrs:mins`, format = "%H:%M"))
ggplot(aes(x = hours_total, y = counts, colour = device)) +
geom_line(show.legend = F) +
facet_grid(id ~ device, scales = "free_y") +
xlab("time(hours)") +
ylab("step count") +
ggtitle("Step Count vs Competitor's Device") +
scale_x_continuous(n.breaks = 12)
qb_device_data %>%
mutate(hours_total = mins / 60 + hours) %>%
#mutate(`hrs:mins` = paste0(hours, ":", mins)) %>%#,
#`hrs:mins` = strptime(`hrs:mins`, format = "%H:%M"))
ggplot(aes(x = hours_total, y = counts, colour = device)) +
geom_line(show.legend = F) +
facet_grid(id ~ device, scales = "free_y") +
xlab("time(hours)") +
ylab("step count") +
ggtitle("Step Count vs Competitor's Device") +
scale_x_continuous(n.breaks = 18)
qb_device_data %>%
mutate(hours_total = mins / 60 + hours) %>%
#mutate(`hrs:mins` = paste0(hours, ":", mins)) %>%#,
#`hrs:mins` = strptime(`hrs:mins`, format = "%H:%M"))
ggplot(aes(x = hours_total, y = counts, colour = device)) +
geom_line(show.legend = F) +
facet_grid(id ~ device, scales = "free_y") +
xlab("time(hours)") +
ylab("step count") +
ggtitle("Step Count vs Competitor's Device")
qb_revenue_breakdown
col_scheme <- c("#E89FE9", "#50434F", "#B6A7B5", "#F9A472", "#BD7040")
library(tidyverse)
library(CodeClanData)
col_scheme <- c("#E89FE9", "#50434F", "#B6A7B5", "#F9A472", "#BD7040")
library(tidyverse)
library(CodeClanData)
library(scales)
col_scheme <- c("#E89FE9", "#50434F", "#B6A7B5", "#F9A472", "#BD7040")
ggplot(qb_revenue_breakdown, aes(x = Year, y = Revenue, fill = Product)) +
geom_col() +
ylab(labels = comma)
ggplot(qb_revenue_breakdown, aes(x = Year, y = Revenue, fill = Product)) +
geom_col() +
#ylab(labels = comma)
ggplot(qb_revenue_breakdown, aes(x = Year, y = Revenue, fill = Product)) +
geom_col()
ggplot(qb_revenue_breakdown, aes(x = Year, y = Revenue, fill = Product)) +
geom_col() +
ylab(labels = comma())
ggplot(qb_revenue_breakdown, aes(x = Year, y = Revenue, fill = Product)) +
geom_col() +
scale_y_continuous(labels = comma())
ggplot(qb_revenue_breakdown, aes(x = Year, y = Revenue, fill = Product)) +
geom_col() +
scale_y_continuous(labels = comma
ggplot(qb_revenue_breakdown, aes(x = Year, y = Revenue, fill = Product)) +
geom_col() +
scale_y_continuous(labels = comma)
ggplot(qb_revenue_breakdown, aes(x = Year, y = Revenue, fill = Product)) +
geom_col() +
scale_y_continuous(labels = comma) +
ggtitle("Sources of Revenue")
ggplot(qb_revenue_breakdown, aes(x = Year, y = Revenue, fill = Product)) +
geom_col() +
scale_y_continuous(labels = comma) +
ggtitle("Sources of Revenue") +
scale_fill_manual(values = col_scheme)
ggplot(qb_revenue_breakdown, aes(x = Year, y = Revenue, fill = Product)) +
geom_col() +
scale_y_continuous(labels = comma) +
ggtitle("Sources of Revenue") +
scale_fill_manual(values = col_scheme) +
homework_theme
homework_theme <- function() {
theme(
panel.background = element_rect(fill = "white"),
# modify grid 3)
panel.grid = element_line(colour = "grey", size = 0.5)
# modify text, axis and colour 4) and 5)
axis.text = element_text(size = 10),
homework_theme <- function() {
theme(
panel.background = element_rect(fill = "white"),
# modify grid 3)
panel.grid = element_line(colour = "grey", size = 0.5),
# modify text, axis and colour 4) and 5)
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
title = element_text(size = 16)
)
}
ggplot(qb_revenue_breakdown, aes(x = Year, y = Revenue, fill = Product)) +
geom_col() +
scale_y_continuous(labels = comma) +
ggtitle("Sources of Revenue") +
scale_fill_manual(values = col_scheme) +
homework_theme
ggplot(qb_revenue_breakdown, aes(x = Year, y = Revenue, fill = Product)) +
geom_col() +
scale_y_continuous(labels = comma) +
ggtitle("Sources of Revenue") +
scale_fill_manual(values = col_scheme) +
homework_theme()
ggplot(qb_revenue_breakdown, aes(x = Year, y = Revenue, fill = Product)) +
geom_col() +
scale_y_continuous(labels = comma) +
ggtitle("Sources of Revenue") +
scale_fill_manual(values = col_scheme) +
#homework_theme()
ggplot(qb_revenue_breakdown, aes(x = Year, y = Revenue, fill = Product)) +
geom_col() +
scale_y_continuous(labels = comma) +
ggtitle("Sources of Revenue") +
scale_fill_manual(values = col_scheme) #+
#homework_theme()
ggplot(qb_revenue_breakdown, aes(x = Year, y = Revenue, fill = Product)) +
geom_col() +
scale_y_continuous(labels = comma) +
ggtitle("Sources of Revenue") +
scale_fill_manual(values = col_scheme) +
homework_theme()
homework_theme <- function() {
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", size = 2, fill = NA),
panel.grid = element_line(colour = "grey", size = 0.5),
# modify text, axis and colour 4) and 5)
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
title = element_text(size = 16)
)
}
ggplot(qb_revenue_breakdown, aes(x = Year, y = Revenue, fill = Product)) +
geom_col() +
scale_y_continuous(labels = comma) +
ggtitle("Sources of Revenue") +
scale_fill_manual(values = col_scheme) +
homework_theme()
homework_theme <- function() {
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", size = 0.5, fill = NA),
panel.grid = element_line(colour = "grey", size = 0.5),
# modify text, axis and colour 4) and 5)
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
title = element_text(size = 16)
)
}
ggplot(qb_revenue_breakdown, aes(x = Year, y = Revenue, fill = Product)) +
geom_col() +
scale_y_continuous(labels = comma) +
ggtitle("Sources of Revenue") +
scale_fill_manual(values = col_scheme) +
homework_theme()
qb_monthly_sales %>%
filter(Cashflow == "Kwikbit Unit 1 Sales") %>%
ggplot( aes(x = Date, y = Amount)) +
geom_line() +
labs ( title = "Kwikbit Unit 1 Sales") +
scale_x_date(date_breaks = "1 month", date_labels = "%b%y") +
scale_fill_manual(values = col_scheme) +
homework_theme()
qb_monthly_sales %>%
filter(Cashflow == "Kwikbit Unit 1 Sales") %>%
ggplot( aes(x = Date, y = Amount)) +
geom_line() +
labs ( title = "Kwikbit Unit 1 Sales") +
scale_x_date(date_breaks = "1 month", date_labels = "%b%y")
homework_theme <- function() {
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", size = 0.5, fill = NA),
panel.grid = element_line(colour = "grey", size = 0.2),
# modify text, axis and colour 4) and 5)
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
title = element_text(size = 16)
)
}
qb_monthly_sales %>%
filter(Cashflow == "Kwikbit Unit 1 Sales") %>%
ggplot( aes(x = Date, y = Amount)) +
geom_line() +
labs ( title = "Kwikbit Unit 1 Sales") +
scale_x_date(date_breaks = "1 month", date_labels = "%b%y") +
homework_theme()
qb_monthly_sales %>%
filter ( Cashflow != "Kwikbit Unit 1 Sales") %>%
ggplot(aes(x = Date, y = Amount, colour = Cashflow)) +
geom_line() +
scale_x_date(date_breaks = "1 month", date_labels = "%b%y") +
homework_theme()
qb_monthly_sales %>%
filter ( Cashflow != "Kwikbit Unit 1 Sales") %>%
ggplot(aes(x = Date, y = Amount, colour = Cashflow)) +
geom_line() +
scale_x_date(date_breaks = "1 month", date_labels = "%b%y") +
scale_colour_manual(values = col_scheme) +
homework_theme()
qb_monthly_sales %>%
filter ( Cashflow != "Kwikbit Unit 1 Sales") %>%
ggplot(aes(x = Date, y = Amount, colour = Cashflow)) +
geom_line() +
scale_x_date(date_breaks = "1 month", date_labels = "%b%y") +
scale_fill_manual(values = col_scheme) +
homework_theme()
qb_monthly_sales %>%
filter ( Cashflow != "Kwikbit Unit 1 Sales") %>%
ggplot(aes(x = Date, y = Amount, colour = Cashflow)) +
geom_line() +
scale_x_date(date_breaks = "1 month", date_labels = "%b%y") +
scale_colour_manual(values = col_scheme) +
homework_theme()
qb_competitors %>%
mutate(revenue_thousands = Revenue / 1000) %>%
ggplot(aes( x = Year, y = revenue_thousands, fill = Company)) +
geom_area() +
ylab ("Revenue (000's)") +
labs (title = "Competitor's Sales")+
scale_fill_manual(values = col_scheme) +
homework_theme()
qb_competitors %>%
mutate(revenue_thousands = Revenue / 1000) %>%
ggplot(aes( x = Year, y = revenue_thousands, colour = Company)) +
geom_line() +
geom_point() +
ylab ("Revenue (000's)") +
labs (title = "Competitor's Sales")+
scale_fill_manual(values = col_scheme) +
homework_theme()
qb_competitors %>%
mutate(revenue_thousands = Revenue / 1000) %>%
ggplot(aes( x = Year, y = revenue_thousands, colour = Company)) +
geom_line() +
geom_point() +
ylab ("Revenue (000's)") +
labs (title = "Competitor's Sales")+
scale_colour_manual(values = col_scheme) +
homework_theme()
qb_device_data %>%
mutate(hours_total = mins / 60 + hours) %>%
#mutate(`hrs:mins` = paste0(hours, ":", mins)) %>%#,
#`hrs:mins` = strptime(`hrs:mins`, format = "%H:%M"))
ggplot(aes(x = hours_total, y = counts, colour = device)) +
geom_line(show.legend = F) +
facet_grid(id ~ device, scales = "free_y") +
xlab("time(hours)") +
ylab("step count") +
ggtitle("Step Count vs Competitor's Device")+
scale_fill_manual(values = col_scheme) +
homework_theme()
qb_device_data %>%
mutate(hours_total = mins / 60 + hours) %>%
#mutate(`hrs:mins` = paste0(hours, ":", mins)) %>%#,
#`hrs:mins` = strptime(`hrs:mins`, format = "%H:%M"))
ggplot(aes(x = hours_total, y = counts, colour = device)) +
geom_line(show.legend = F) +
facet_grid(id ~ device, scales = "free_y") +
xlab("time(hours)") +
ylab("step count") +
ggtitle("Step Count vs Competitor's Device")+
scale_colour_manual(values = col_scheme) +
homework_theme()
qb_monthly_sales %>%
filter ( Cashflow != "Kwikbit Unit 1 Sales") %>%
ggplot(aes(x = Date, y = Amount, colour = Cashflow)) +
geom_line() +
scale_x_date(date_breaks = "1 month", date_labels = "%b%y") +
scale_colour_manual(values = col_scheme) +
homework_theme() +
ggtitle("Revenue and Cost")
qb_monthly_sales %>%
filter ( Cashflow != "Kwikbit Unit 1 Sales") %>%
ggplot(aes(x = Date, y = Amount, colour = Cashflow)) +
geom_line() +
scale_x_date(date_breaks = "1 month", date_labels = "%b%y") +
scale_colour_manual(values = col_scheme) +
scale_y_continuous(labels = comma) +
homework_theme() +
ggtitle("Revenue and Cost")
qb_competitors %>%
mutate(revenue_thousands = Revenue / 1000) %>%
ggplot(aes( x = Year, y = revenue_thousands, fill = Company)) +
geom_area() +
ylab ("Revenue (000's)") +
labs (title = "Competitor's Sales")+
scale_y_continuous(labels = comma) +
scale_fill_manual(values = col_scheme) +
homework_theme()
qb_competitors %>%
mutate(revenue_thousands = Revenue / 1000) %>%
ggplot(aes( x = Year, y = revenue_thousands, colour = Company)) +
geom_line() +
geom_point() +
ylab ("Revenue (000's)") +
labs (title = "Competitor's Sales") +
scale_y_continuous(labels = comma) +
scale_colour_manual(values = col_scheme) +
homework_theme()
qb_device_data %>%
mutate(hours_total = mins / 60 + hours) %>%
#mutate(`hrs:mins` = paste0(hours, ":", mins)) %>%#,
#`hrs:mins` = strptime(`hrs:mins`, format = "%H:%M"))
ggplot(aes(x = hours_total, y = counts, colour = device)) +
geom_line(show.legend = F) +
facet_grid(id ~ device, scales = "free_y") +
xlab("time(hours)") +
ylab("step count") +
scale_y_continuous(labels = comma) +
ggtitle("Step Count vs Competitor's Device")+
scale_colour_manual(values = col_scheme) +
homework_theme()
library(tidyverse)
library(CodeClanData)
library(scales)
col_scheme <- c("#E89FE9", "#50434F", "#B6A7B5", "#F9A472", "#BD7040")
homework_theme <- function() {
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", size = 0.5, fill = NA),
panel.grid = element_line(colour = "grey", size = 0.2),
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
title = element_text(size = 16)
)
}
qb_revenue_breakdown
ggplot(qb_revenue_breakdown, aes(x = Year, y = Revenue, fill = Product)) +
geom_col() +
scale_y_continuous(labels = comma) +
ggtitle("Sources of Revenue") +
scale_fill_manual(values = col_scheme) +
homework_theme()
qb_monthly_sales %>%
filter(Cashflow == "Kwikbit Unit 1 Sales") %>%
ggplot( aes(x = Date, y = Amount)) +
geom_line() +
labs ( title = "Kwikbit Unit 1 Sales") +
scale_x_date(date_breaks = "1 month", date_labels = "%b%y") +
homework_theme()
qb_monthly_sales %>%
filter ( Cashflow != "Kwikbit Unit 1 Sales") %>%
ggplot(aes(x = Date, y = Amount, colour = Cashflow)) +
geom_line() +
scale_x_date(date_breaks = "1 month", date_labels = "%b%y") +
scale_colour_manual(values = col_scheme) +
scale_y_continuous(labels = comma) +
homework_theme() +
ggtitle("Revenue and Cost")
qb_competitors
qb_competitors %>%
mutate(revenue_thousands = Revenue / 1000) %>%
ggplot(aes( x = Year, y = revenue_thousands, fill = Company)) +
geom_area() +
ylab ("Revenue (000's)") +
labs (title = "Competitor's Sales")+
scale_y_continuous(labels = comma) +
scale_fill_manual(values = col_scheme) +
homework_theme()
qb_competitors %>%
mutate(revenue_thousands = Revenue / 1000) %>%
ggplot(aes( x = Year, y = revenue_thousands, colour = Company)) +
geom_line() +
geom_point() +
ylab ("Revenue (000's)") +
labs (title = "Competitor's Sales") +
scale_y_continuous(labels = comma) +
scale_colour_manual(values = col_scheme) +
homework_theme()
