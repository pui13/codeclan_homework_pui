library(tidyverse)
library(infer)
msleep
msleep <- msleep
msleep <- msleep
glimpse(msleep)
View(msleep)
msleep %>%
ggplot(aes(sleep_total)) +
geom_histogram(colour = "white")
obsereved_stat <- msleep %>%
summarise(mean_sleep_total = mean(sleep_total))
observed_stat
obsereved_stat <- msleep %>%
summarise(mean_sleep_total = mean(sleep_total))
observed_stat
observed_stat <- msleep %>%
summarise(mean_sleep_total = mean(sleep_total))
observed_stat
observed_stat <- msleep %>%
summarise(mean_sleep_total = mean(sleep_total))
observed_stat
rm(obsereved_stat)
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesise(null = "point", mu = 7) %>%
generate( reps = 10000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesise(null = "point", mu = 7) %>%
generate( reps = 10000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
visualise(bins = 30)
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesise(null = "point", mu = 7) %>%
generate( reps = 10000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
visualise(bins = 30) +
shade_p_value(obs_stat = observed_stat$mean_sleep_total,
direction = "both")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat$mean_sleep_total,
direction = "both")
p_value()
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat$mean_sleep_total,
direction = "both")
p_value
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat$mean_sleep_total,
direction = "both")
p_value
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat$mean_sleep_total,
direction = "both")
p_value
omni_herb <- msleep %>%
filter(vore %in% c("omni", "herbi")) %>%
group_by(vore)
omni_herb
omni_herb <- msleep %>%
filter(vore %in% c("omni", "herbi")) %>%
group_by(vore)
omni_herb
omni_herb <- msleep %>%
filter(vore %in% c("omni", "herbi")) %>%
group_by(vore)
omni_herb %>%
summarise(n = n())
omni_herb %>%
ggplot(aes(vore, sleep_total)) +
geom_boxplot()
omni_herb <- msleep %>%
filter(vore %in% c("omni", "herbi"))
omni_herb %>%
summarise(n = n())
omni_herb <- msleep %>%
filter(vore %in% c("omni", "herbi"))
omni_herb %>%
group_by(vore)
summarise(n = n())
omni_herb <- msleep %>%
filter(vore %in% c("omni", "herbi"))
omni_herb %>%
group_by(vore) %>%
summarise(n = n())
omni_herb %>%
ggplot(aes(vore, sleep_total)) +
geom_boxplot()
null_distribution <- omni_herb %>%
specify(sleep_total ~ vore) %>%
hypothesise(null = "independence") %>%
generate(reps = 10000,
type = "permute") %>%
calculate(stat = "diff in means",
order = c("omni", "herbi"))
head(null_distribution)
observed_stat <- omni_herb %>%
specify(sleep_total ~ vore) %>%
calculate(stat = "diff in means",
order = c("omni", "herbi"))
observed_stat
null_distribution %>%
visualise() +
shade_p_value(obs_stat = observed_stat,
direction = "greater")
p_value <- null_distribution %>%
get_p_value(obs_stat = observed_stat,
direction = "greater")
p_value
domesticated <- msleep %>%
mutate(is_domesticated = ifelse(conservation == "domesticated",
"domesticated",
"not domesticated"))
domesticated <- msleep %>%
mutate(is_domesticated = ifelse(conservation == "domesticated",
"domesticated",
"not domesticated"))
domesticated %>%
group_by(is_domesticated) %>%
summarise(prop = n()/ nrow(domesticated)) %>%
filter(is_domesticated == "domesticated")
domesticated <- msleep %>%
mutate(is_domesticated = ifelse(conservation == "domesticated",
"domesticated",
"not domesticated"))
domesticated %>%
group_by(is_domesticated) %>%
filter(is_domesticated == "domesticated") %>%
summarise(prop = n()/ nrow(domesticated))# %>%
#filter(is_domesticated == "domesticated")
domesticated <- msleep %>%
mutate(is_domesticated = ifelse(conservation == "domesticated",
"domesticated",
"not domesticated"))
domesticated %>%
group_by(is_domesticated) %>%
filter(is_domesticated == "domesticated") %>%
summarise(prop = n()/ nrow(domesticated))
domesticated <- msleep %>%
mutate(is_domesticated = ifelse(conservation == "domesticated",
"domesticated",
"not domesticated"))
domesticated %>%
group_by(is_domesticated) %>%
#filter(is_domesticated == "domesticated") %>%
summarise(prop = n()/ nrow(domesticated))
domesticated <- msleep %>%
mutate(is_domesticated = ifelse(conservation == "domesticated",
"domesticated",
"not domesticated"))
domesticated %>%
group_by(is_domesticated) %>%
filter(is_domesticated == "domesticated") %>%
summarise(prop = n()/ nrow(domesticated))
null_distribution <- domesticated %>%
specify(response = is_domesticated,
success = "domesticatted") %>%
hypothesise(null = "point", p = 0.05) %?%
generate(reps = 10000, type = "simulate") %>%
calculate(stat = "prop")
null_distribution <- domesticated %>%
specify(response = is_domesticated,
success = "domesticatted") %>%
hypothesise(null = "point", p = 0.05) %>%
generate(reps = 10000, type = "simulate") %>%
calculate(stat = "prop")
null_distribution <- domesticated %>%
specify(response = is_domesticated,
success = "domesticatted") %>%
hypothesise(null = "point", p = 0.05) %>%
generate(reps = 10000, type = "simulate") %>%
calculate(stat = "prop")
null_distribution <- domesticated %>%
specify(response = is_domesticated,
success = "domesticated") %>%
hypothesise(null = "point", p = 0.05) %>%
generate(reps = 10000, type = "simulate") %>%
calculate(stat = "prop")
head(null_distribution)
null_distribution %>%
visualise(bins = 30)
null_distribution %>%
visualise(bins = 10)
null_distribution %>%
visualise(bins = 20)
null_distribution %>%
visualise(bins = 30)
observed_stat <- domesticated %>%
specify(response = is_domesticated,
success = "domesticated") %>%
calculate(stat = "prop")
observed_stat
null_distribution %>%
visualise(bins = 30) +
shade_p_value(obs_stat = observed_stat, direction = "greater")
null_distribution %>%
get_p_value(obs_stat = observed_stat,
direction = "greater")
